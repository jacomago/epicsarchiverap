name: Docker Run All Tests

on:
  push:
  schedule:
    - cron: '0 0 * * SUN'
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'For release X'
        # Default value if no value is explicitly provided
        default: 'For testing'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

permissions:
  contents: read
  checks: write

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Create Build Reports Folder
        run: mkdir -p build/reports/tests
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: docker/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run integration tests with docker compose
        run: docker compose -f docker/docker-compose.gradlecommands.yml run epicsarchiver-test
        env:
          DOCKER_DEFAULT_PLATFORM: linux/amd64
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          GRADLE_CMD: integrationTests
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'
      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/

  flaky-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Run flaky tests with gradle
        if: always() # always run even if the previous step fails
        run: gradle flakyTests
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'
      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/

  single-fork-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Run flaky tests with gradle
        if: always() # always run even if the previous step fails
        run: gradle singleForkTests
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'
      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/
